@layer utilities {
    aside.inspector {

        .react-aria-Select {
            span[aria-hidden] {
                width: calc(var(--spacing-lg) * 1.25);
                height: calc(var(--spacing-lg) * 1.25);
                margin-left: 0;
            }
        }


        .react-aria-ToggleButtonGroup,
        .react-aria-Group {
            background-color: var(--color-gray-100);
            border-radius: var(--radius-md);
            width: 100%;
            height: 27px;

            .control-button {
                width: 100%;
            }
        }

        .react-aria-Button,
        .react-aria-ToggleButton {
            background-color: transparent;
            /*var(--color-gray-100);*/
            border-width: 0;
            border-radius: var(--radius-md);
            font-size: var(--text-xs);
            flex: 1;

            &[data-pressed] {
                box-shadow: inset 0 1px 2px rgb(0 0 0 / 0.1);
                background-color: var(--color-gray-100);
                border-color: var(--color-gray-200);

                color: var(--color-gray-400);
            }

            &[data-selected] {
                background: var(--color-white);
                border-color: var(--color-gray-300);
                border-width: 1px;

            }


        }

        .fieldset-actions {
            .react-aria-Button {
                background-color: var(--color-gray-100);
                border-radius: var(--radius-md);
            }
        }
    }


    .design-container fieldset {
        display: grid;
        grid-template-rows: auto 27px;
        grid-template-columns: 1fr 1fr 27px;
        grid-template-areas:
            "label label label"
            "input1 input2 icon";
        gap: 4px 8px;

        button {
            padding: 2px;
            height: 27px;
            display: flex;
            align-items: center;
            justify-content: center;
            /* background-color: var(--color-gray-50); */
        }
    }

    fieldset.layout-direction {
        display: grid;
        grid-template-rows: auto 27px;
        grid-template-columns: 1fr 1fr 27px;
        grid-template-areas:
            "label label label"
            "input1 input2 icon"
            "input3 input2 icon"
            "input4 input2 icon";
        gap: 4px 8px;
    }

    fieldset.spacing-padding,
    fieldset.spacing-margin {
        display: grid;
        grid-template-rows: auto;
        grid-template-columns: 1fr;
        grid-template-areas:
            "label"
            "input1";
        gap: 4px 8px;

        .position-top {
            svg {
                transform: rotate(180deg);
            }
        }

        .position-right {
            svg {
                transform: rotate(270deg);
            }
        }

        .position-bottom {
            svg {
                transform: rotate(0deg);
            }
        }

        .position-left {
            svg {
                transform: rotate(90deg);
            }
        }
    }

    fieldset.style-background {
        display: grid;
        grid-template-rows: auto 27px;
        grid-template-columns: 1fr 27px;
        grid-template-areas:
            "label label label"
            "input1 input1 icon";
        gap: 4px 8px;
    }

    fieldset.style-border,
    fieldset.style-border-width,
    fieldset.style-border-radius,
    fieldset.style-border-style {
        flex: 1;
        display: grid;
        grid-template-rows: auto;
        grid-template-columns: 1fr;
        grid-template-areas:
            "label"
            "input1";
        gap: 4px 8px;
    }

    fieldset.style-border {
        grid-area: input1;
    }

    fieldset.style-border-width {
        grid-area: input2;
    }

    fieldset.style-border-radius {
        grid-area: input3;
    }

    fieldset.style-border-style {
        grid-area: input4;
    }

    fieldset.typography-font {
        display: grid;
        grid-template-rows: auto 27px;
        grid-template-columns: 1fr 1fr 27px;
        grid-template-areas:
            "label label label"
            "input1 input1 icon";
        gap: 4px 8px;
    }

    legend,
    .fieldset-legend {
        grid-area: label;
        font-size: var(--text-2xs);
        color: var(--color-gray-400);
    }

    legend.padding-legend {
        grid-area: label1;
        font-size: var(--text-2xs);
        color: var(--color-gray-400);
    }

    legend.margin-legend {
        grid-area: label2;
        font-size: var(--text-2xs);
        color: var(--color-gray-400);
    }

    .alignment-controls-horizontal,
    .color-control,
    .border-width-control,
    .border-radius-control,
    .border-style-control,
    .spacing-control,
    .size-control-width,
    .position-control-x {
        grid-area: input1;
        display: flex;
    }

    .alignment-controls-vertical,

    .size-control-height,
    .position-control-y {
        grid-area: input2;
        display: flex;
    }

    .justify-control,
    .position-bottom {
        grid-area: input3;
        display: flex;
    }

    .gap-control,
    .position-left {
        grid-area: input4;
        display: flex;
    }

    .fieldset-actions {
        grid-area: icon;

        button {
            width: 27px;
            height: 27px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    }

    .control-label {
        display: block;
        width: 27px;
        min-width: 27px;
        height: 27px;
        padding: var(--spacing) var(--spacing);
        text-align: center;
        background-color: transparent;
        /*var(--color-gray-50);*/
        border: 1px solid transparent;
        border-right-width: 0px;
        border-radius: var(--radius-md) 0 0 var(--radius-md);
        font-size: var(--text-xs);
    }

    .control-input {
        width: 100%;
        background-color: transparent;
        /*var(--color-gray-50);*/
        border: 1px solid transparent;
        border-left-width: 0px;
        border-radius: 0 var(--radius-md) var(--radius-md) 0;
        font-size: var(--text-xs);

        &:focus {
            outline: none;
        }
    }

    .size-control-width,
    .size-control-height {
        .control-label {
            padding: var(--spacing) 0 var(--spacing) var(--spacing);
            min-width: 25px;
            width: 25px;
        }

        .control-input {
            border-radius: 0;
        }

        .react-aria-SelectValue {
            display: none;
        }

        .react-aria-Button {
            border-radius: 0 var(--radius-md) var(--radius-md) 0;
            border-left-width: 0;
            padding: 2px 2px 2px 0;
            width: 25px;
            box-shadow: none;
        }
    }

    .spacing-controls-container {
        display: flex;
        flex-direction: row;
        gap: 8px;
        align-items: flex-end;

        .fieldset-actions {
            min-width: 27px;

            button {
                width: 27px;
                height: 27px;
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 2px;
            }
        }
    }

    .border-controls-container {
        display: grid;
        grid-template-rows: repeat(2, 1fr);
        grid-template-columns: 1fr 1fr 27px;
        grid-template-areas:
            "input1 input2 icon"
            "input3 input4 empty";
        gap: 8px;

        .fieldset-actions {
            display: flex;
            flex-direction: column;
            justify-content: flex-end;
        }
    }

    .gap-control,
    .spacing-control {
        .control-input {
            border-radius: 0;
        }

        .react-aria-SelectValue {
            display: none;
        }

        .react-aria-Button {
            border-radius: 0 var(--radius-md) var(--radius-md) 0;
            border-left-width: 0;
            padding: 2px 2px 2px 0;
            width: 25px;
            box-shadow: none;
        }
    }

    .border-width-control,
    .border-radius-control {
        .control-input {
            border-radius: 0;
        }

        .react-aria-SelectValue {
            display: none;
        }

        .react-aria-Button {
            border-radius: 0 var(--radius-md) var(--radius-md) 0;
            border-left-width: 0;
            padding: 2px 2px 2px 0;
            width: 25px;
            box-shadow: none;
        }
    }

    .border-style-control {
        .control-input {
            border-radius: 0;
        }

        .react-aria-SelectValue {
            display: none;
        }

        .react-aria-Button {
            border-radius: 0 var(--radius-md) var(--radius-md) 0;
            border-left-width: 0;
            padding: 2px 2px 2px 0;
            width: 25px;
            box-shadow: none;
        }
    }

    .font-select-control {
        .aria-Select {
            width: 100%;
        }

        .aria-Button {
            width: 100%;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: var(--spacing) var(--spacing) var(--spacing) var(--spacing-sm);
        }
    }

    .direction-alignment-grid {
        grid-area: input2;

        [role="radiogroup"] {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: repeat(3, 1fr);
            gap: 0px;
            background-color: var(--color-gray-50);
            border-radius: var(--radius-md);

            button {
                outline-color: var(--color-gray-200);
                margin-inline-start: 0;
                border-width: 0;
                height: 29px;

                .alignment-dot {
                    width: 4px;
                    height: 4px;
                    background-color: var(--color-gray-300);
                }
            }
        }
    }

    /* 새로 추가된 클래스들은 기존 스타일과 호환되도록 조정 */
    .transform-alignment,
    .transform-size,
    .transform-position,
    .layout-direction,
    .style-background,
    .style-border,
    .typography-font {
        /* 기존 fieldset 스타일을 상속 */
    }

    .direction-controls {
        grid-area: input1;
        display: flex;
    }

    .font-select-control {
        grid-area: input1;
        display: flex;
    }

    .react-aria-Select {
        .react-aria-Label {
            display: none;
        }
    }
}