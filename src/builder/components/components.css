@layer components {
    @keyframes toggle {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    .react-aria-Button {
        color: var(--color-gray-800);
        background: var(--color-gray-50);
        border: 1px solid var(--color-gray-200);
        border-radius: var(--radius-md);
        appearance: none;
        vertical-align: middle;
        font-size: var(--text-sm);
        text-align: center;
        margin: 0;
        outline: none;
        padding: var(--spacing) var(--spacing-md);
        text-decoration: none;

        &[data-pressed] {
            box-shadow: inset 0 1px 2px rgb(0 0 0 / 0.1);
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
            color: var(--color-white);
        }

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -1px;
        }

        &[data-disabled] {
            border-color: var(--color-gray-200);
            color: var(--color-gray-400);
        }
    }

    .react-aria-ToggleButton {
        color: var(--color-gray-800);
        background: var(--color-gray-50);
        border: 1px solid var(--color-gray-200);
        forced-color-adjust: none;
        border-radius: var(--radius-md);
        appearance: none;
        vertical-align: middle;
        font-size: var(--text-sm);
        text-align: center;
        margin: 0;
        outline: none;
        padding: var(--spacing) var(--spacing-md);

        &[data-pressed] {
            box-shadow: inset 0 1px 2px rgb(0 0 0 / 0.1);
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
            color: var(--color-white);
        }

        &[data-selected] {
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
            color: var(--color-white);

            &[data-pressed] {
                background: var(--color-primary-700);
                border-color: var(--color-primary-700);
            }
        }

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-disabled] {
            border-color: var(--color-gray-200);
            background: var(--color-gray-50);
            color: var(--color-gray-400);
        }
    }

    .react-aria-ToggleButtonGroup {
        display: flex;

        >button {
            border-radius: 0;
            z-index: 1;

            &[data-disabled] {
                z-index: 0;
            }

            &[data-selected],
            &[data-focus-visible] {
                z-index: 2;
            }
        }
    }

    .react-aria-ToggleButtonGroup[data-orientation=horizontal] {
        flex-direction: row;

        >button {
            margin-inline-start: -1px;

            &:first-child {
                border-radius: var(--radius-md) 0 0 var(--radius-md);
                margin-inline-start: 0;
            }

            &:last-child {
                border-radius: 0 var(--radius-md) var(--radius-md) 0;
            }
        }
    }

    .react-aria-ToggleButtonGroup[data-orientation=vertical] {
        flex-direction: column;
        width: fit-content;

        >button {
            margin-block-start: -1px;

            &:first-child {
                border-radius: var(--radius-md) var(--radius-md) 0 0;
                margin-block-start: 0;
            }

            &:last-child {
                border-radius: 0 0 var(--radius-md) var(--radius-md);
            }
        }
    }

    .react-aria-Checkbox {
        --selected-color: var(--highlight-background);
        --selected-color-pressed: var(--highlight-background-pressed);
        --checkmark-color: var(--highlight-foreground);

        display: flex;
        /* This is needed so the HiddenInput is positioned correctly */
        position: relative;
        align-items: center;
        gap: 0.571rem;
        font-size: 1.143rem;
        color: var(--color-gray-800);
        forced-color-adjust: none;

        .checkbox {
            width: 1.143rem;
            height: 1.143rem;
            border: 2px solid var(--border-color);
            border-radius: 4px;
            transition: all 200ms;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        svg {
            width: 1rem;
            height: 1rem;
            fill: none;
            stroke: var(--color-white);
            stroke-width: 3px;
            stroke-dasharray: 22px;
            stroke-dashoffset: 66;
            transition: all 200ms;
        }

        &[data-pressed] .checkbox {
            border-color: var(--color-primary-600);
        }

        &[data-focus-visible] .checkbox {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-selected],
        &[data-indeterminate] {
            .checkbox {
                border-color: var(--color-primary-600);
                background: var(--color-primary-600);
            }

            &[data-pressed] .checkbox {
                border-color: var(--color-primary-700);
                background: var(--color-primary-700);
            }

            svg {
                stroke-dashoffset: 44;
            }
        }

        &[data-indeterminate] {
            & svg {
                stroke: none;
                fill: var(--checkmark-color);
            }
        }

        &[data-invalid] {
            .checkbox {
                --checkmark-color: var(--color-gray-50);
                border-color: var(--color-red-500);
            }

            &[data-pressed] .checkbox {
                border-color: var(--color-red-600);
            }

            &[data-selected],
            &[data-indeterminate] {
                .checkbox {
                    background: var(--color-red-500);
                }

                &[data-pressed] .checkbox {
                    background: var(--color-red-600);
                }
            }
        }

        &[data-disabled] {
            color: var(--color-gray-400);

            .checkbox {
                border-color: var(--color-gray-200);
            }
        }
    }

    .react-aria-CheckboxGroup {
        display: flex;
        flex-direction: column;
        gap: 0.571rem;
        color: var(--text-color);

        .react-aria-FieldError {
            font-size: 12px;
            color: var(--invalid-color);
        }

        [slot=description] {
            font-size: 12px;
        }
    }


    .aria-Button,
    .aria-ToggleButton {

        padding: var(--spacing) var(--spacing-md);
        font-size: var(--text-sm);
        text-align: center;
        transition: all 0.2s var(--ease-in-out);
        border: 1px solid var(--color-gray-200);
        border-radius: var(--radius-md);
        background-color: var(--color-gray-50);



        &.primary {
            background-color: var(--color-primary-600);
            color: var(--color-white);
        }

        &.surface {
            background-color: var(--color-white);
            color: var(--color-blue-800);
        }

        &[data-pressed] {
            box-shadow: inset 0 1px 2px rgb(0 0 0 / 0.1);
            color: var(--color-white);
            background: var(--color-primary-700);
            border-color: var(--color-primary-700);
        }

        &[data-selected] {
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
            color: var(--color-white);

            &[data-pressed] {
                background: var(--color-primary-700);
                border-color: var(--color-primary-700);
            }
        }

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-disabled] {
            background-color: var(--color-gray-200);
            color: var(--color-gray-400);
            cursor: not-allowed;
        }
    }

    .aria-ToggleButtonGroup {
        display: flex;

        >button {
            border-radius: 0;
            z-index: 1;

            &[data-disabled] {
                z-index: 0;
            }

            &[data-selected],
            &[data-focus-visible] {
                z-index: 2;
            }
        }

        &[data-orientation=horizontal] {
            flex-direction: row;

            >button {
                margin-inline-start: -1px;

                &:first-child {
                    border-radius: var(--radius-md) 0 0 var(--radius-md);
                    margin-inline-start: 0;
                }

                &:last-child {
                    border-radius: 0 var(--radius-md) var(--radius-md) 0;
                }
            }
        }

        &[data-orientation=vertical] {
            flex-direction: column;


        }
    }

    .aria-Label {
        display: inline-block;
        font-size: var(--text-sm);
        padding: var(--spacing) var(--spacing-md);
        font-weight: 500;
        color: var(--color-gray-500);
    }

    .aria-Text {
        display: inline-block;
        font-size: var(--text-sm);
        padding: var(--spacing) var(--spacing-md);
        color: var(--color-gray-600);
    }

    .aria-Field {
        padding: var(--spacing) var(--spacing-md);
        border: 1px solid var(--color-gray-500);
        border-radius: var(--radius-md);
        font-size: var(--text-sm);
        color: var(--color-gray-800);

        &[data-focused] {
            border-color: var(--color-primary-500);
        }

        &[data-invalid] {
            border-color: var(--color-red-500);
        }

        &[data-disabled] {
            background-color: var(--color-gray-200);
            color: var(--color-gray-400);
        }
    }

    .aria-Input,
    .aria-TextArea {
        padding: var(--spacing) var(--spacing-md);
        border: 1px solid var(--color-gray-500);
        border-radius: var(--radius-md);
        font-size: var(--text-sm);
        color: var(--color-gray-800);

        &[data-focused] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -1px;
        }

        &::before {
            content: '';
        }

    }

    .aria-TextField {
        display: flex;
        flex-direction: column;
        color: var(--color-gray-600);

    }

    .aria-FieldError {
        font-size: var(--text-sm);
        color: var(--color-red-500);
    }

    .aria-Select {
        color: var(--text-color);

        .aria-Button {

            border-radius: 6px;
            font-size: 1.072rem;
            padding: 0.286rem 0.286rem 0.286rem 0.571rem;
            display: flex;
            align-items: center;
            max-width: 250px;

            &[data-focus-visible] {
                outline: 2px solid var(--focus-ring-color);
                outline-offset: -1px;
            }
        }

        .aria-SelectValue {
            font-size: var(--text-xs);

            &[data-placeholder] {
                font-size: var(--text-xs);
                color: var(--text-color-placeholder);
            }
        }

        span[aria-hidden] {
            width: 1.5rem;
            line-height: 1.375rem;
            margin-left: 1rem;
            padding: 1px;
            background: var(--highlight-background);
            color: var(--highlight-foreground);
            forced-color-adjust: none;
            border-radius: 4px;
            font-size: 0.857rem;
        }
    }

    .aria-Popover[data-trigger=Select] {
        min-width: var(--trigger-width);

        .aria-ListBox {
            display: block;
            width: unset;
            max-height: inherit;
            min-height: unset;
            border: none;

            .aria-Header {
                padding-left: 1.571rem;
            }
        }

        .aria-ListBoxItem {
            padding: 0 0.571rem 0 1.571rem;

            &[data-focus-visible] {
                outline: none;
            }

            &[data-selected] {
                font-weight: 600;
                background: unset;
                color: var(--text-color);

                &::before {
                    content: '✓';
                    content: '✓' / '';
                    alt: ' ';
                    position: absolute;
                    top: 4px;
                    left: 4px;
                }
            }

            &[data-focused],
            &[data-pressed] {
                background: var(--highlight-background);
                color: var(--highlight-foreground);
            }
        }
    }

}