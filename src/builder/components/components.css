@layer components {
    @keyframes toggle {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    .react-aria-Label {
        font-size: var(--text-sm);
        color: var(--color-gray-800);
        padding: var(--spacing) var(--spacing-sm);
        line-height: normal;
    }

    .react-aria-Button {
        color: var(--color-gray-800);
        background: var(--color-gray-50);
        border: 1px solid var(--color-gray-200);
        border-radius: var(--radius-md);
        appearance: none;
        vertical-align: middle;
        font-size: var(--text-sm);
        text-align: center;
        margin: 0;
        outline: none;
        padding: var(--spacing) var(--spacing-md);
        text-decoration: none;

        &[data-pressed] {
            box-shadow: inset 0 1px 2px rgb(0 0 0 / 0.1);
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
            color: var(--color-white);
        }

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -1px;
        }

        &[data-disabled] {
            border-color: var(--color-gray-200);
            color: var(--color-gray-400);
        }
    }

    .react-aria-ToggleButton {
        color: var(--color-gray-800);
        background: var(--color-gray-50);
        border: 1px solid var(--color-gray-200);
        forced-color-adjust: none;
        border-radius: var(--radius-md);
        appearance: none;
        vertical-align: middle;
        font-size: var(--text-sm);
        text-align: center;
        margin: 0;
        outline: none;
        padding: var(--spacing) var(--spacing-md);

        &[data-pressed] {
            box-shadow: inset 0 1px 2px rgb(0 0 0 / 0.1);
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
            color: var(--color-white);
        }

        &[data-selected] {
            background: var(--color-primary-600);
            border-color: var(--color-primary-600);
            color: var(--color-white);

            &[data-pressed] {
                background: var(--color-primary-700);
                border-color: var(--color-primary-700);
            }
        }

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-disabled] {
            border-color: var(--color-gray-200);
            background: var(--color-gray-50);
            color: var(--color-gray-400);
        }
    }

    .react-aria-ToggleButtonGroup {
        display: flex;

        >button {
            border-radius: 0;
            z-index: 1;

            &[data-disabled] {
                z-index: 0;
            }

            &[data-selected],
            &[data-focus-visible] {
                z-index: 2;
            }
        }
    }

    .react-aria-ToggleButtonGroup[data-orientation=horizontal] {
        flex-direction: row;

        >button {
            margin-inline-start: -1px;

            &:first-child {
                border-radius: var(--radius-md) 0 0 var(--radius-md);
                margin-inline-start: 0;
            }

            &:last-child {
                border-radius: 0 var(--radius-md) var(--radius-md) 0;
            }
        }
    }

    .react-aria-ToggleButtonGroup[data-orientation=vertical] {
        flex-direction: column;
        width: fit-content;

        >button {
            margin-block-start: -1px;

            &:first-child {
                border-radius: var(--radius-md) var(--radius-md) 0 0;
                margin-block-start: 0;
            }

            &:last-child {
                border-radius: 0 0 var(--radius-md) var(--radius-md);
            }
        }
    }

    .react-aria-RadioGroup {
        display: flex;
        flex-direction: column;
        gap: 8px;
        color: var(--text-color);
    }

    .react-aria-Radio {
        display: flex;
        /* This is needed so the HiddenInput is positioned correctly */
        position: relative;
        align-items: center;
        gap: var(--spacing-sm);
        font-size: var(--text-sm);
        color: var(--text-color);
        forced-color-adjust: none;

        &:before {
            content: '';
            display: block;
            width: var(--spacing-md);
            height: var(--spacing-md);
            box-sizing: border-box;
            border: var(--spacing-2xs) solid var(--border-color);
            background: var(--field-background);
            border-radius: var(--radius-md);
            transition: all 200ms;
        }

        &[data-pressed]:before {
            border-color: var(--border-color-pressed);
        }

        &[data-selected] {
            &:before {
                border-color: var(--highlight-background);
                border-width: var(--spacing-xs);
            }

            &[data-pressed]:before {
                border-color: var(--highlight-background-pressed);
            }
        }

        &[data-focus-visible]:before {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-invalid] {
            &:before {
                border-color: var(--invalid-color);
            }

            &[data-pressed]:before {
                border-color: var(--invalid-color-pressed);
            }
        }
    }

    .react-aria-RadioGroup {
        .react-aria-FieldError {
            font-size: var(--text-xs);
            color: var(--invalid-color);
        }

        [slot=description] {
            font-size: var(--text-xs);
        }

        &[data-orientation=horizontal] {
            flex-direction: row;
            align-items: center;
        }
    }

    .react-aria-Radio {
        &[data-disabled] {
            color: var(--text-color-disabled);

            &:before {
                border-color: var(--border-color-disabled);
            }
        }
    }

    .react-aria-Checkbox {
        --selected-color: var(--color-gray-600);
        --selected-color-pressed: var(--color-gray-800);
        --checkmark-color: var(--color-white);

        display: flex;
        /* This is needed so the HiddenInput is positioned correctly */
        position: relative;
        align-items: center;
        gap: var(--spacing-sm);
        font-size: var(--text-sm);
        color: var(--color-gray-800);
        forced-color-adjust: none;

        .checkbox {
            width: var(--spacing-md);
            height: var(--spacing-md);
            border: 2px solid var(--border-color);
            border-radius: var(--radius-sm);
            transition: all 200ms;
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
        }

        svg {
            width: var(--spacing-md);
            height: var(--spacing-md);
            fill: none;
            stroke: var(--color-white);
            stroke-width: 3px;
            stroke-dasharray: 22px;
            stroke-dashoffset: 66;
            transition: all 200ms;
        }

        &[data-pressed] .checkbox {
            border-color: var(--color-primary-600);
        }

        &[data-focus-visible] .checkbox {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-selected],
        &[data-indeterminate] {
            .checkbox {
                border-color: var(--color-primary-600);
                background: var(--color-primary-600);
            }

            &[data-pressed] .checkbox {
                border-color: var(--color-primary-700);
                background: var(--color-primary-700);
            }

            svg {
                stroke-dashoffset: 44;
            }
        }

        &[data-indeterminate] {
            & svg {
                stroke: none;
                fill: var(--checkmark-color);
            }
        }

        &[data-invalid] {
            .checkbox {
                --checkmark-color: var(--color-gray-50);
                border-color: var(--color-red-500);
            }

            &[data-pressed] .checkbox {
                border-color: var(--color-red-600);
            }

            &[data-selected],
            &[data-indeterminate] {
                .checkbox {
                    background: var(--color-red-500);
                }

                &[data-pressed] .checkbox {
                    background: var(--color-red-600);
                }
            }
        }

        &[data-disabled] {
            color: var(--color-gray-400);

            .checkbox {
                border-color: var(--color-gray-200);
            }
        }
    }

    .react-aria-CheckboxGroup {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-sm);
        color: var(--text-color);

        .react-aria-FieldError {
            font-size: var(--text-sm);
            color: var(--invalid-color);
        }

        [slot=description] {
            font-size: var(--text-sm);
        }
    }

    .react-aria-CheckboxGroup[data-orientation="horizontal"] {
        display: flex;
        flex-direction: row;
        gap: 1rem;
        align-items: flex-start;
    }

    .react-aria-CheckboxGroup[data-orientation="vertical"] {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-sm);
        align-items: flex-start;
    }

    .react-aria-ListBox {
        display: flex;
        flex-direction: column;
        gap: 4px;
        max-height: inherit;
        overflow: auto;
        padding: 4px;
        border: 1px solid var(--border-color);
        border-radius: 6px;
        background: var(--overlay-background);
        forced-color-adjust: none;
        outline: none;
        width: 250px;
        max-height: 300px;
        min-height: 100px;
        box-sizing: border-box;

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -1px;
        }
    }

    .react-aria-ListBoxItem {
        padding: var(--spacing-2xs) var(--spacing-sm);
        border-radius: var(--radius-sm);
        outline: none;
        cursor: default;
        color: var(--text-color);
        font-size: var(--text-sm);
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        min-height: var(--spacing-md);

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -2px;
        }

        &[data-selected] {
            background: var(--color-primary-600);
            color: var(--color-white);

            &[data-focus-visible] {
                outline-color: var(--highlight-foreground);
                outline-offset: -4px;
            }
        }
    }

    .react-aria-ListBoxItem[href] {
        text-decoration: none;
        cursor: pointer;
        -webkit-touch-callout: none;
    }

    .react-aria-ListBox {
        .react-aria-ListBoxSection:not(:first-child) {
            margin-top: 12px;
        }

        .react-aria-Header {
            font-size: var(--text-sm);
            font-weight: bold;
            padding: 0 var(--spacing-sm);
        }
    }

    .react-aria-ListBoxItem {
        [slot=label] {
            font-weight: bold;
        }

        [slot=description] {
            font-size: small;
        }
    }

    .react-aria-ListBox[data-orientation=horizontal],
    .react-aria-ListBox[data-layout=grid] {
        flex-direction: row;
        width: fit-content;
        max-width: 100%;
        padding: var(--spacing-sm);

        .react-aria-ListBoxItem {
            position: relative;
            margin: 0;
            padding: var(--spacing-sm);

            & img {
                object-fit: cover;
                aspect-ratio: 1/1;
                max-width: 150px;
                margin-bottom: var(--spacing-sm);
                border-radius: var(--radius-sm);
            }

            &[data-selected] {
                background: none;
                color: inherit;

                &:after {
                    content: '✓';
                    content: '✓' / '';
                    alt: ' ';
                    position: absolute;
                    top: 8px;
                    right: 8px;
                    background: var(--highlight-background);
                    border: 2px solid var(--highlight-foreground);
                    color: var(--highlight-foreground);
                    width: 22px;
                    height: 22px;
                    border-radius: 22px;
                    box-sizing: border-box;
                    font-size: 14px;
                    line-height: 1em;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    box-shadow: 0 0 8px rgb(0 0 0 / .5);
                }
            }

            &[data-focus-visible] {
                outline: 2px solid var(--focus-ring-color);
                outline-offset: -2px;
            }
        }
    }

    .react-aria-ListBox[data-layout=grid] {
        display: grid;
        grid-template-columns: 1fr 1fr;
        scrollbar-gutter: stable;
    }

    .react-aria-ListBox[data-layout=grid][data-orientation=horizontal] {
        width: 100%;
        max-width: none;
        display: grid;
        grid-auto-flow: column;
        grid-template-rows: 58px 58px;
        grid-template-columns: none;
        grid-auto-columns: 250px;
        max-height: 200px;
        gap: 8px;

        .react-aria-ListBoxItem {
            display: grid;
            grid-template-areas: "image ."
                "image title"
                "image description"
                "image .";
            grid-template-columns: auto 1fr;
            grid-template-rows: 1fr auto auto 1fr;
            column-gap: 8px;

            & img {
                width: 50px;
                height: 50px;
                grid-area: image;
                margin-bottom: 0;
            }

            [slot=label] {
                grid-area: title;
            }

            [slot=description] {
                grid-area: description;
            }
        }
    }

    .react-aria-ListBoxItem {
        &[data-disabled] {
            color: var(--text-color-disabled);
        }
    }

    .react-aria-ListBox {
        &[data-empty] {
            align-items: center;
            justify-content: center;
            font-style: italic;
        }
    }

    .react-aria-ListBoxItem {
        &[data-dragging] {
            opacity: 0.6;
        }
    }

    .react-aria-DropIndicator[data-drop-target] {
        outline: 1px solid var(--highlight-background);
    }

    .react-aria-ListBox[data-drop-target] {
        outline: 2px solid var(--highlight-background);
        outline-offset: -1px;
        background: var(--highlight-overlay)
    }

    .react-aria-ListBoxItem[data-drop-target] {
        outline: 2px solid var(--highlight-background);
        background: var(--highlight-overlay)
    }

    .react-aria-DropIndicator[data-drop-target] {
        outline: 1px solid var(--highlight-background);
    }

    .react-aria-Tree {
        display: flex;
        flex-direction: column;
        gap: 2px;
        overflow: auto;
        padding: 4px;
        border: 1px solid var(--border-color);
        border-radius: 6px;
        background: var(--overlay-background);
        forced-color-adjust: none;
        outline: none;
        width: 250px;
        max-height: 300px;
        box-sizing: border-box;

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -1px;
        }

        .react-aria-TreeItem {
            display: flex;
            align-items: center;
            gap: 0.571rem;
            min-height: 28px;
            padding: 0.286rem 0.286rem 0.286rem 0.571rem;
            --padding: 16px;
            border-radius: 6px;
            outline: none;
            cursor: default;
            color: var(--text-color);
            font-size: 1.072rem;
            position: relative;
            transform: translateZ(0);

            .react-aria-Button[slot=chevron] {
                all: unset;
                display: flex;
                visibility: hidden;
                align-items: center;
                justify-content: center;
                width: 1.3rem;
                height: 100%;
                padding-left: calc((var(--tree-item-level) - 1) * var(--padding));

                svg {
                    rotate: 0deg;
                    transition: rotate 200ms;
                    width: 12px;
                    height: 12px;
                    fill: none;
                    stroke: currentColor;
                    stroke-width: 3px;
                }
            }

            &[data-has-child-items] .react-aria-Button[slot=chevron] {
                visibility: visible;
            }

            &[data-expanded] .react-aria-Button[slot=chevron] svg {
                rotate: 90deg;
            }

            &[data-focus-visible] {
                outline: 2px solid var(--focus-ring-color);
                outline-offset: -2px;
            }

            &[data-pressed] {
                background: var(--gray-100);
            }

            &[data-selected] {
                background: var(--highlight-background);
                color: var(--highlight-foreground);
                --focus-ring-color: var(--highlight-foreground);

                &[data-focus-visible] {
                    outline-color: var(--highlight-foreground);
                    outline-offset: -4px;
                }

                .react-aria-Button {
                    color: var(--highlight-foreground);
                    --highlight-hover: rgb(255 255 255 / 0.1);
                    --highlight-pressed: rgb(255 255 255 / 0.2);
                }
            }

            &[data-disabled] {
                color: var(--text-color-disabled);
            }

            .react-aria-Button:not([slot]) {
                margin-left: auto;
                background: transparent;
                border: none;
                font-size: 1.2rem;
                line-height: 1.2em;
                padding: 0.286rem 0.429rem;
                transition: background 200ms;

                &[data-hovered] {
                    background: var(--highlight-hover);
                }

                &[data-pressed] {
                    background: var(--highlight-pressed);
                    box-shadow: none;
                }
            }
        }

        /* join selected items if :has selector is supported */
        @supports selector(:has(.foo)) {
            gap: 0;

            .react-aria-TreeItem[data-selected]:has(+ [data-selected]) {
                border-end-start-radius: 0;
                border-end-end-radius: 0;
            }

            .react-aria-TreeItem[data-selected]+[data-selected] {
                border-start-start-radius: 0;
                border-start-end-radius: 0;
            }
        }

        :where(.react-aria-TreeItem) .react-aria-Checkbox {
            --selected-color: var(--highlight-foreground);
            --selected-color-pressed: var(--highlight-foreground-pressed);
            --checkmark-color: var(--highlight-background);
            --background-color: var(--highlight-background);
        }
    }

    .react-aria-TreeItem[data-href] {
        cursor: pointer;
    }

    .react-aria-Tree {
        &[data-empty] {
            display: flex;
            align-items: center;
            justify-content: center;
            font-style: italic;
        }
    }

    .react-aria-TreeItem {
        &[data-allows-dragging] {
            padding-left: 4px;
        }

        &[data-dragging] {
            opacity: 0.6;
        }

        &[data-drop-target] {
            outline: 2px solid var(--highlight-background);
            background: var(--highlight-overlay);
        }

        [slot=drag] {
            all: unset;
            width: 15px;
            text-align: center;

            &[data-focus-visible] {
                border-radius: 4px;
                outline: 2px solid var(--focus-ring-color);
            }
        }
    }

    .react-aria-Tree {
        &[data-selection-mode=multiple] {
            --checkbox-width: 28px;
        }

        &[data-allows-dragging] {
            --drag-button-width: 23px;
        }

        .react-aria-DropIndicator {
            &[data-drop-target] {
                outline: 1px solid var(--highlight-background);
                margin-left: calc(8px + var(--checkbox-width, 0px) + var(--drag-button-width, 0px) + 26px + (var(--tree-item-level) - 1) * 16px);
            }
        }
    }

    .react-aria-Tree[data-drop-target] {
        outline: 2px solid var(--highlight-background);
        outline-offset: -1px;
        background: var(--highlight-overlay);
    }

    .react-aria-Select {
        color: var(--text-color);

        .react-aria-Button {

            border-radius: var(--radius-md);

            padding: var(--spacing-2xs) var(--spacing-2xs) var(--spacing-2xs) var(--spacing-sm);
            display: flex;
            align-items: center;
            max-width: 100%;

            &[data-focus-visible] {
                outline: 2px solid var(--focus-ring-color);
                outline-offset: -1px;
            }
        }

        .react-aria-SelectValue {


            &[data-placeholder] {
                font-style: italic;
                color: var(--color-gray-400);
            }
        }

        span[aria-hidden] {
            width: 1.5rem;
            line-height: 1.375rem;

            padding: 1px;
            background: transparent;
            color: var(--color-gray-600);
            forced-color-adjust: none;
            border-radius: var(--radius-md);
            font-size: var(--text-xs);
        }
    }

    .react-aria-Popover[data-trigger=Select] {
        min-width: var(--trigger-width);

        .react-aria-ListBox {
            display: block;
            width: unset;
            max-height: inherit;
            min-height: unset;
            border: none;

            .react-aria-Header {
                padding-left: var(--spacing);
            }
        }

        .react-aria-ListBoxItem {
            padding: var(--spacing-2xs) var(--spacing-sm) var(--spacing-2xs) var(--spacing-xl);

            &[data-focus-visible] {
                outline: none;
            }

            &[data-selected] {
                font-weight: 600;
                background: unset;
                color: var(--text-color);

                &::before {
                    content: '✓';
                    content: '✓' / '';
                    alt: ' ';
                    position: absolute;
                    top: var(--spacing-xs);
                    left: var(--spacing);
                }
            }

            &[data-focused],
            &[data-pressed] {
                background: var(--color-gray-600);
                color: var(--color-white);
            }
        }
    }

    .react-aria-ListBoxItem[href] {
        text-decoration: none;
        cursor: pointer;
    }

    .react-aria-Select {
        .react-aria-SelectValue {
            [slot=description] {
                display: none;
            }
        }

        .react-aria-Button {
            &[data-disabled] {
                border-color: var(--border-color-disabled);
                color: var(--text-color-disabled);

                span[aria-hidden] {
                    background: var(--border-color-disabled);
                    color: var(--text-color-disabled);
                }

                .react-aria-SelectValue {
                    &[data-placeholder] {
                        color: var(--text-color-disabled);
                    }
                }
            }
        }
    }

    .react-aria-Slider {
        display: grid;
        grid-template-areas: "label output"
            "track track";
        grid-template-columns: 1fr auto;
        max-width: 300px;
        color: var(--text-color);

        .react-aria-Label {
            grid-area: label;
        }

        .react-aria-SliderOutput {
            grid-area: output;
        }

        .react-aria-SliderTrack {
            grid-area: track;
            position: relative;

            /* track line */
            &:before {
                content: '';
                display: block;
                position: absolute;
                background: var(--border-color);
            }
        }

        .react-aria-SliderThumb {
            width: 1.429rem;
            height: 1.429rem;
            border-radius: 50%;
            background: var(--color-primary-500);
            border: 2px solid var(--color-white);
            forced-color-adjust: none;

            &[data-dragging] {
                background: var(--color-primary-600);
            }

            &[data-focus-visible] {
                outline: 2px solid var(--focus-ring-color);
            }
        }

        &[data-orientation=horizontal] {
            flex-direction: column;
            width: 300px;

            .react-aria-SliderTrack {
                height: 30px;
                width: 100%;

                &:before {
                    height: 3px;
                    width: 100%;
                    top: 50%;
                    transform: translateY(-50%);
                }
            }

            .react-aria-SliderThumb {
                top: 50%;
            }
        }

        &[data-orientation=vertical] {
            height: 150px;
            display: block;

            .react-aria-Label,
            .react-aria-SliderOutput {
                display: none;
            }

            .react-aria-SliderTrack {
                width: 30px;
                height: 100%;

                &:before {
                    width: 3px;
                    height: 100%;
                    left: 50%;
                    transform: translateX(-50%);
                }
            }

            .react-aria-SliderThumb {
                left: 50%;
            }
        }

        &[data-disabled] {
            .react-aria-SliderTrack:before {
                background: var(--border-color-disabled);
            }

            .react-aria-SliderThumb {
                background: var(--border-color-disabled);
            }
        }
    }

    .react-aria-Tabs {
        display: flex;
        color: var(--text-color);

        &[data-orientation=horizontal] {
            flex-direction: column;
        }
    }

    .react-aria-TabList {
        display: flex;

        &[data-orientation=horizontal] {
            border-bottom: 1px solid var(--border-color);

            .react-aria-Tab {
                border-bottom: 3px solid var(--border-color);
            }
        }
    }

    .react-aria-Tab {
        padding: 10px;
        cursor: default;
        outline: none;
        position: relative;
        color: var(--text-color-base);
        transition: color 200ms;
        --border-color: transparent;
        forced-color-adjust: none;

        &[data-hovered],
        &[data-focused] {
            color: var(--text-color-hover);
        }

        &[data-selected] {
            --border-color: var(--highlight-background);
            color: var(--text-color);
        }

        &[data-disabled] {
            color: var(--text-color-disabled);

            &[data-selected] {
                --border-color: var(--text-color-disabled);
            }
        }

        &[data-focus-visible]:after {
            content: '';
            position: absolute;
            inset: 4px;
            border-radius: 4px;
            border: 2px solid var(--focus-ring-color);
        }
    }

    .react-aria-TabPanel {
        margin-top: 4px;
        padding: 10px;
        border-radius: 4px;
        outline: none;

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
        }
    }

    .react-aria-Tabs {
        &[data-orientation=vertical] {
            flex-direction: row;
        }
    }

    .react-aria-TabList {
        &[data-orientation=vertical] {
            flex-direction: column;
            border-inline-end: 1px solid gray;

            .react-aria-Tab {
                border-inline-end: 3px solid var(--border-color, transparent);
            }
        }
    }

    .react-aria-Tab {
        &[data-disabled] {
            color: var(--text-color-disabled);

            &[data-selected] {
                --border-color: var(--border-color-disabled);
            }
        }
    }

    .react-aria-Tab[href] {
        text-decoration: none;
        cursor: pointer;
    }

    .react-aria-TagGroup {
        display: flex;
        flex-direction: column;
        gap: 2px;
        font-size: small;
        color: var(--text-color);
    }

    .react-aria-TagList {
        display: flex;
        flex-wrap: wrap;
        gap: 4px;
    }

    .react-aria-Tag {
        color: var(--text-color);
        border: 1px solid var(--border-color);
        forced-color-adjust: none;
        border-radius: 4px;
        padding: 2px 8px;
        font-size: 0.929rem;
        outline: none;
        cursor: default;
        display: flex;
        align-items: center;
        transition: border-color 200ms;

        &[data-hovered] {
            border-color: var(--border-color-hover);
        }

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-selected] {
            border-color: var(--highlight-background);
            background: var(--highlight-background);
            color: var(--highlight-foreground);
        }

        [slot=remove] {
            background: none;
            border: none;
            padding: 0;
            margin-left: 2px;
            color: var(--text-color-base);
            transition: color 200ms;
            outline: none;
            font-size: 0.95em;
            border-radius: 100%;
            aspect-ratio: 1/1;
            height: 100%;

            &[data-hovered] {
                color: var(--text-color-hover);
            }

            &[data-focus-visible] {
                outline: 2px solid var(--focus-ring-color);
                outline-offset: -1px;
            }
        }

        &[data-selected] {
            [slot=remove] {
                color: inherit;
            }
        }
    }

    .react-aria-Tag[data-href] {
        text-decoration: none;
        cursor: pointer;
    }

    .react-aria-TagList {
        .react-aria-Tag {
            &[data-disabled] {
                border-color: var(--border-color-disabled);
                color: var(--text-color-disabled);
            }
        }
    }

    .react-aria-TagGroup {
        [slot=description] {
            font-size: 12px;
        }

        [slot=errorMessage] {
            font-size: 12px;
            color: var(--invalid-color);
        }
    }

    @media (forced-colors: active) {
        .react-aria-Select {
            .react-aria-Button {
                &[data-disabled] span[aria-hidden] {
                    background: 0 0;
                }
            }
        }
    }

    .react-aria-Select {
        .react-aria-FieldError {
            font-size: var(--text-sm);
            color: var(--invalid-color);
        }

        [slot=description] {
            font-size: var(--text-sm);
        }
    }

    .react-aria-Popover {
        --background-color: var(--overlay-background);

        border: 1px solid var(--border-color);
        box-shadow: 0 8px 20px rgba(0 0 0 / 0.1);
        border-radius: var(--radius-md);
        background: var(--background-color);
        color: var(--text-color);
        outline: none;
        max-width: 100%;
        transition: transform 200ms, opacity 200ms;

        .react-aria-OverlayArrow svg {
            display: block;
            fill: var(--background-color);
            stroke: var(--border-color);
            stroke-width: 1px;
        }

        &[data-entering],
        &[data-exiting] {
            transform: var(--origin);
            opacity: 0;
        }

        &[data-placement=top] {
            --origin: translateY(8px);

            &:has(.react-aria-OverlayArrow) {
                margin-bottom: var(--spacing);
            }
        }

        &[data-placement=bottom] {
            --origin: translateY(-8px);

            &:has(.react-aria-OverlayArrow) {
                margin-top: var(--spacing);
            }

            .react-aria-OverlayArrow svg {
                transform: rotate(180deg);
            }
        }

        &[data-placement=right] {
            --origin: translateX(-8px);

            &:has(.react-aria-OverlayArrow) {
                margin-left: var(--spacing);
            }

            .react-aria-OverlayArrow svg {
                transform: rotate(90deg);
            }
        }

        &[data-placement=left] {
            --origin: translateX(8px);

            &:has(.react-aria-OverlayArrow) {
                margin-right: var(--spacing);
            }

            .react-aria-OverlayArrow svg {
                transform: rotate(-90deg);
            }
        }
    }

    .react-aria-GridList {
        display: flex;
        flex-direction: column;
        gap: 2px;
        max-height: inherit;
        overflow: auto;
        padding: 4px;
        border: 1px solid var(--border-color);
        border-radius: 6px;
        background: var(--overlay-background);
        forced-color-adjust: none;
        outline: none;
        width: 250px;
        max-height: 300px;
        min-height: 100px;
        box-sizing: border-box;

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -1px;
        }

        .react-aria-GridListItem {
            display: flex;
            align-items: center;
            gap: 0.571rem;
            min-height: 28px;
            padding: 0.286rem 0.286rem 0.286rem 0.571rem;
            border-radius: 6px;
            outline: none;
            cursor: default;
            color: var(--text-color);
            font-size: 1.072rem;
            position: relative;
            transform: translateZ(0);

            &[data-focus-visible] {
                outline: 2px solid var(--focus-ring-color);
                outline-offset: -2px;
            }

            &[data-pressed] {
                background: var(--gray-100);
            }

            &[data-selected] {
                background: var(--highlight-background);
                color: var(--highlight-foreground);
                --focus-ring-color: var(--highlight-foreground);

                &[data-focus-visible] {
                    outline-color: var(--highlight-foreground);
                    outline-offset: -4px;
                }

                .react-aria-Button {
                    color: var(--highlight-foreground);
                    --highlight-hover: rgb(255 255 255 / 0.1);
                    --highlight-pressed: rgb(255 255 255 / 0.2);
                }
            }

            &[data-disabled] {
                color: var(--text-color-disabled);
            }

            .react-aria-Button:not([slot]) {
                margin-left: auto;
            }

            .react-aria-Button {
                background: transparent;
                border: none;
                font-size: 1.2rem;
                line-height: 1.2em;
                padding: 0.286rem 0.429rem;
                transition: background 200ms;

                &[data-hovered] {
                    background: var(--highlight-hover);
                }

                &[data-pressed] {
                    background: var(--highlight-pressed);
                    box-shadow: none;
                }
            }
        }

        /* join selected items if :has selector is supported */
        @supports selector(:has(.foo)) {
            gap: 0;

            .react-aria-GridListItem[data-selected]:has(+ [data-selected]),
            .react-aria-GridListItem[data-selected]:has(+ .react-aria-DropIndicator + [data-selected]) {
                border-end-start-radius: 0;
                border-end-end-radius: 0;
            }

            .react-aria-GridListItem[data-selected]+[data-selected],
            .react-aria-GridListItem[data-selected]+.react-aria-DropIndicator+[data-selected] {
                border-start-start-radius: 0;
                border-start-end-radius: 0;
            }
        }

        :where(.react-aria-GridListItem) .react-aria-Checkbox {
            --selected-color: var(--highlight-foreground);
            --selected-color-pressed: var(--highlight-foreground-pressed);
            --checkmark-color: var(--highlight-background);
            --background-color: var(--highlight-background);
        }
    }

    .react-aria-GridListItem[data-href] {
        cursor: pointer;
    }

    .react-aria-GridList {
        &[data-empty] {
            align-items: center;
            justify-content: center;
            font-style: italic;
        }
    }

    .react-aria-GridListItem {
        &[data-allows-dragging] {
            padding-left: 4px;
        }

        &[data-dragging] {
            opacity: 0.6;
        }

        [slot=drag] {
            all: unset;
            width: 15px;
            text-align: center;

            &[data-focus-visible] {
                border-radius: 4px;
                outline: 2px solid var(--focus-ring-color);
            }
        }
    }

    .react-aria-DropIndicator {
        &[data-drop-target] {
            outline: 1px solid var(--highlight-background);
        }

        @supports not selector(:has(.foo)) {
            /* Undo gap in browsers that don't support :has */
            margin-bottom: -2px;
        }
    }

    .react-aria-GridList[data-drop-target] {
        outline: 2px solid var(--highlight-background);
        outline-offset: -1px;
        background: var(--highlight-overlay);
    }

    .react-aria-GridListItem[data-drop-target] {
        outline: 2px solid var(--highlight-background);
        background: var(--highlight-overlay);
    }

    .react-aria-DropIndicator {
        &[data-drop-target] {
            outline: 1px solid var(--highlight-background);
        }

        @supports not selector(:has(.foo)) {
            /* Undo gap in browsers that don't support :has */
            margin-bottom: -2px;
        }
    }

    .react-aria-ComboBox {
        color: var(--text-color);

        >div:has(.react-aria-Input) {
            display: flex;
            align-items: center;
        }

        .react-aria-Input {
            margin: 0;
            font-size: var(--text-sm);
            background: var(--color-gray-50);
            color: var(--color-gray-800);
            border: 1px solid var(--color-gray-200);
            border-radius: var(--radius-md);
            padding: var(--spacing-2xs) var(--spacing-sm);
            vertical-align: middle;
            outline: none;
            min-width: 0;

            &[data-focused] {
                outline: 2px solid var(--focus-ring-color);
                outline-offset: -1px;
            }
        }

        .react-aria-Button {
            background: var(--color-gray-50);
            color: var(--color-gray-800);
            forced-color-adjust: none;
            border-radius: 4px;
            border: none;
            margin-left: -27px;
            width: 25px;
            height: 25px;
            padding: 0;
            font-size: var(--text-sm);
            cursor: default;
            flex-shrink: 0;
            display: flex;
            align-items: center;
            justify-content: center;

            &[data-pressed] {
                box-shadow: none;
                background: var(--highlight-background);
            }
        }
    }

    .react-aria-Popover[data-trigger=ComboBox] {
        width: var(--trigger-width);

        .react-aria-ListBox {
            display: block;
            width: unset;
            max-height: inherit;
            min-height: unset;
            border: none;

            .react-aria-Header {
                padding-left: 1.571rem;
            }
        }

        .react-aria-ListBoxItem {
            padding: var(--spacing-2xs) var(--spacing-sm) var(--spacing-2xs) var(--spacing-sm);

            &[data-focus-visible] {
                outline: none;
            }

            &[data-selected] {
                font-weight: 600;
                background: unset;
                color: var(--text-color);

                &::before {
                    content: '✓';
                    content: '✓' / '';
                    alt: ' ';
                    position: absolute;
                    top: 4px;
                    left: 4px;
                }
            }

            &[data-focused],
            &[data-pressed] {
                background: var(--highlight-background);
                color: var(--highlight-foreground);
            }
        }
    }

    .react-aria-ListBoxItem[href] {
        text-decoration: none;
        cursor: pointer;
    }

    .react-aria-ComboBox {

        >div:has(.react-aria-Input) {
            display: flex;
            align-items: center;
        }

        .react-aria-Input {
            &[data-disabled] {
                border-color: var(--border-color-disabled);
            }
        }

        .react-aria-Button {
            &[data-disabled] {
                background: var(--border-color-disabled);
            }
        }

        .react-aria-Input {
            &[data-invalid]:not([data-focused]) {
                border-color: var(--invalid-color);
            }
        }

        .react-aria-FieldError {
            font-size: 12px;
            color: var(--invalid-color);
        }

        [slot=description] {
            font-size: 12px;
        }
    }

    .aria-Label {
        display: inline-block;
        font-size: var(--text-sm);
        padding: var(--spacing) var(--spacing-md);
        font-weight: 500;
        color: var(--color-gray-500);
    }

    .aria-Text {
        display: inline-block;
        font-size: var(--text-sm);
        padding: var(--spacing) var(--spacing-md);
        color: var(--color-gray-600);
    }

    .aria-Field {
        padding: var(--spacing) var(--spacing-md);
        border: 1px solid var(--color-gray-500);
        border-radius: var(--radius-md);
        font-size: var(--text-sm);
        color: var(--color-gray-800);

        &[data-focused] {
            border-color: var(--color-primary-500);
        }

        &[data-invalid] {
            border-color: var(--color-red-500);
        }

        &[data-disabled] {
            background-color: var(--color-gray-200);
            color: var(--color-gray-400);
        }
    }

    .aria-Input,
    .aria-TextArea {
        padding: var(--spacing) var(--spacing-md);
        border: 1px solid var(--color-gray-500);
        border-radius: var(--radius-md);
        font-size: var(--text-sm);
        color: var(--color-gray-800);

        &[data-focused] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: -1px;
        }

        &::before {
            content: '';
        }

    }

    .aria-TextField {
        display: flex;
        flex-direction: column;
        color: var(--color-gray-600);

    }

    .aria-FieldError {
        font-size: var(--text-sm);
        color: var(--color-red-500);
    }

    /* ListBoxItem 확장 스타일 */
    .react-aria-ListBoxItem {

        /* 확장된 콘텐츠 레이아웃 */
        .listbox-item-content {
            display: flex;
            align-items: center;
            gap: var(--spacing);
            width: 100%;
        }

        .listbox-item-image {
            border-radius: var(--radius-sm);
            object-fit: cover;

            &--small {
                width: 24px;
                height: 24px;
            }

            &--medium {
                width: 32px;
                height: 32px;
            }

            &--large {
                width: 48px;
                height: 48px;
            }
        }

        .listbox-item-icon {
            flex-shrink: 0;
        }

        .listbox-item-text {
            flex: 1;
            min-width: 0;
        }

        .listbox-item-label {
            font-weight: 500;
            color: var(--text-color);
        }

        .listbox-item-description {
            font-size: var(--text-sm);
            color: var(--text-color-secondary);
            margin-top: 2px;
        }

        .listbox-item-subtitle {
            font-size: var(--text-xs);
            color: var(--text-color-tertiary);
            margin-top: 1px;
        }

        .listbox-item-actions {
            display: flex;
            gap: var(--spacing-xs);
            opacity: 0;
            transition: opacity 0.2s ease;
        }

        &:hover .listbox-item-actions {
            opacity: 1;
        }

        .listbox-item-action {
            padding: 2px 6px;
            font-size: var(--text-xs);
            border: 1px solid var(--border-color);
            border-radius: var(--radius-sm);
            background: var(--color-white);
            cursor: pointer;

            &:hover {
                background: var(--color-gray-50);
            }
        }
    }

    /* 레이아웃별 스타일 */
    .react-aria-ListBox--compact .react-aria-ListBoxItem {
        min-height: 32px;
        padding: 4px var(--spacing);
    }

    .react-aria-ListBox--detailed .react-aria-ListBoxItem {
        min-height: 64px;
        padding: var(--spacing);

        .listbox-item-content {
            align-items: flex-start;
        }
    }

    .react-aria-ListBox--grid .react-aria-ListBoxItem {
        padding: var(--spacing);
        text-align: center;

        .listbox-item-content {
            flex-direction: column;
            gap: var(--spacing-sm);
        }

        .listbox-item-image {
            width: 64px;
            height: 64px;
        }
    }

    /* 공통 Collection 아이템 스타일 */
    .collection-item-content {
        display: flex;
        align-items: center;
        gap: var(--spacing);
        width: 100%;
    }

    .collection-item-image {
        border-radius: var(--radius-sm);
        object-fit: cover;

        &--small {
            width: 24px;
            height: 24px;
        }

        &--medium {
            width: 32px;
            height: 32px;
        }

        &--large {
            width: 48px;
            height: 48px;
        }
    }

    .collection-item-icon {
        flex-shrink: 0;
    }

    .collection-item-text {
        flex: 1;
        min-width: 0;
    }

    .collection-item-label {
        font-weight: 500;
        color: var(--text-color);
    }

    .collection-item-description {
        font-size: var(--text-sm);
        color: var(--text-color-secondary);
        margin-top: 2px;
    }

    .collection-item-subtitle {
        font-size: var(--text-xs);
        color: var(--text-color-tertiary);
        margin-top: 1px;
    }

    .collection-item-actions {
        display: flex;
        gap: var(--spacing-xs);
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .collection-item-content:hover .collection-item-actions {
        opacity: 1;
    }

    .collection-item-action {
        padding: 2px 6px;
        font-size: var(--text-xs);
        border: 1px solid var(--border-color);
        border-radius: var(--radius-sm);
        background: var(--color-white);
        cursor: pointer;

        &:hover {
            background: var(--color-gray-50);
        }
    }

    /* GridList 전용 스타일 */
    .react-aria-GridList {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: var(--spacing);
        padding: var(--spacing);
        border: 1px solid var(--color-gray-200);
        border-radius: var(--radius-md);
        background: var(--color-white);
        max-height: 400px;
        overflow: auto;
    }

    .react-aria-GridListItem {
        padding: var(--spacing);
        border: 1px solid var(--color-gray-200);
        border-radius: var(--radius-md);
        background: var(--color-white);
        cursor: pointer;
        transition: all 0.2s ease;

        &:hover {
            border-color: var(--color-gray-300);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        &[data-selected] {
            border-color: var(--color-primary-600);
            background: var(--color-primary-50);
        }

        &[data-focus-visible] {
            outline: 2px solid var(--focus-ring-color);
            outline-offset: 2px;
        }

        &[data-disabled] {
            opacity: 0.5;
            cursor: not-allowed;
        }
    }

    /* GridList 레이아웃별 스타일 */
    .react-aria-GridList--compact {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: var(--spacing-sm);
    }

    .react-aria-GridList--detailed {
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: var(--spacing-md);
    }

    .react-aria-GridList--grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: var(--spacing);
    }

    .listbox-container {
        display: flex;
        flex-direction: column;
    }
}

/* Card 컴포넌트 스타일 */
.react-aria-Card {
    border: 1px solid var(--color-border);
    border-radius: 8px;
    padding: 16px;
    background-color: var(--color-background);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: box-shadow 0.2s ease;
}

.react-aria-Card:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}