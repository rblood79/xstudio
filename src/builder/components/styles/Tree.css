@import "../theme.css";
@import './Button.css';
@import './ToggleButton.css';
@import './Checkbox.css';

@layer components {
  .react-aria-Tree {
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    overflow: auto;
    padding: var(--spacing);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    background: var(--overlay-background);
    forced-color-adjust: none;
    outline: none;
    width: var(--container-2xs);
    max-height: 100%;
    box-sizing: border-box;

    &[data-focus-visible] {
      outline: 2px solid var(--focus-ring-color);
      outline-offset: -1px;
    }

    &[data-empty] {
      display: flex;
      align-items: center;
      justify-content: center;
      font-style: italic;
    }

    &[data-selection-mode=multiple] {
      --checkbox-width: var(--text-base);
    }

    &[data-allows-dragging] {
      --drag-button-width: 23px;
    }

    &[data-drop-target] {
      outline: 2px solid var(--highlight-background);
      outline-offset: -1px;
      background: var(--highlight-overlay);
    }

    .react-aria-TreeItem {
      display: flex;
      align-items: center;
      gap: var(--gap);
      min-height: var(--text-base);
      padding: 0.286rem 0.286rem 0.286rem 0.571rem;
      --padding: var(--spacing);
      border-radius: var(--border-radius);
      outline: none;
      cursor: default;
      color: var(--text-color);
      font-size: var(--text-sm);
      position: relative;
      transform: translateZ(0);
  
      .react-aria-Button[slot=chevron] {
        all: unset;
        display: flex;
        visibility: hidden;
        align-items: center;
        justify-content: center;
        width: 1.3rem;
        height: 100%;
        padding-left: calc((var(--tree-item-level) - 1) * var(--padding));
  
        svg {
          rotate: 0deg;
          transition: rotate 200ms;
          width: 12px;
          height: 12px;
          fill: none;
          stroke: currentColor;
          stroke-width: 3px;
        }
      }
  
      &[data-has-child-items] .react-aria-Button[slot=chevron] {
        visibility: visible;
      }
  
      &[data-expanded] .react-aria-Button[slot=chevron] svg {
        rotate: 90deg;
      }
  
      &[data-focus-visible] {
        outline: 2px solid var(--focus-ring-color);
        outline-offset: -2px;
      }
  
      &[data-pressed] {
        background: var(--gray-100);
      }
  
      &[data-selected] {
        background: var(--highlight-background);
        color: var(--highlight-foreground);
        --focus-ring-color: var(--highlight-foreground);
  
        &[data-focus-visible] {
          outline-color: var(--highlight-foreground);
          outline-offset: -4px;
        }
  
        .react-aria-Button {
          color: var(--highlight-foreground);
          --highlight-hover: rgb(255 255 255 / 0.1);
          --highlight-pressed: rgb(255 255 255 / 0.2);
        }
      }
  
      &[data-disabled] {
        color: var(--text-color-disabled);
      }
  
      .react-aria-Button:not([slot]) {
        margin-left: auto;
        background: transparent;
        border: none;
        font-size: 1.2rem;
        line-height: 1.2em;
        padding: 0.286rem 0.429rem;
        transition: background 200ms;
  
        &[data-hovered] {
          background: var(--highlight-hover);
        }
  
        &[data-pressed] {
          background: var(--highlight-pressed);
          box-shadow: none;
        }
      }
    }
  
    /* join selected items if :has selector is supported */
    @supports selector(:has(.foo)) {
      gap: 0;
  
      .react-aria-TreeItem[data-selected]:has(+ [data-selected]) {
        border-end-start-radius: 0;
        border-end-end-radius: 0;
      }
  
      .react-aria-TreeItem[data-selected] + [data-selected] {
        border-start-start-radius: 0;
        border-start-end-radius: 0;
      }
    }
  
    :where(.react-aria-TreeItem) .react-aria-Checkbox {
      --selected-color: var(--highlight-foreground);
      --selected-color-pressed: var(--highlight-foreground-pressed);
      --checkmark-color: var(--highlight-background);
      --background-color: var(--highlight-background);
    }

    .react-aria-DropIndicator {
      &[data-drop-target] {
        outline: 1px solid var(--highlight-background);
        margin-left: calc(8px + var(--checkbox-width, 0px) + var(--drag-button-width, 0px) + 26px + (var(--tree-item-level) - 1) * 16px);
      }
    }
  }

  .react-aria-TreeItem {
    &[data-href] {
      cursor: pointer;
    }

    &[data-allows-dragging] {
      padding-left: 4px;
    }

    &[data-dragging] {
      opacity: 0.6;
    }

    &[data-drop-target] {
      outline: 2px solid var(--highlight-background);
      background: var(--highlight-overlay);
    }

    [slot=drag] {
      all: unset;
      width: 15px;
      text-align: center;

      &[data-focus-visible] {
        border-radius: 4px;
        outline: 2px solid var(--focus-ring-color);
      }
    }
  }
}
