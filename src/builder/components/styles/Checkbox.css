@import "../theme.css";

@layer components {
  
  .react-aria-Checkbox {
    --selected-color: var(--highlight-background);
    --selected-color-pressed: var(--highlight-background-pressed);
    --checkmark-color: var(--highlight-foreground);
  
    display: flex;
    /* This is needed so the HiddenInput is positioned correctly */
    position: relative;
    align-items: center;
    gap: var(--gap);
    font-size: var(--text-sm);
    color: var(--text-color);
    forced-color-adjust: none;
    padding: var(--spacing);
  
    .checkbox {
      width: var(--text-lg);
      height: var(--text-lg);
      border: 2px solid var(--border-color);
      border-radius: var(--border-radius);
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-shrink: 0;
    }
  
    svg {
      width: var(--text-lg);
      height: var(--text-lg);
      fill: none;
      stroke: var(--checkmark-color);
      
      transition: all 0.2s ease;
    }
  
    &[data-pressed] .checkbox {
      border-color: var(--border-color-pressed);
    }
  
    &[data-focus-visible] .checkbox {
      outline: 2px solid var(--focus-ring-color);
      outline-offset: 2px;
    }
  
    &[data-selected],
    &[data-indeterminate] {
      .checkbox {
        border-color: var(--selected-color);
        background: var(--selected-color);
      }
  
      &[data-pressed] .checkbox {
        border-color: var(--selected-color-pressed);
        background: var(--selected-color-pressed);
      }
  
      svg {
        stroke-dashoffset: 44;
      }
    }
  
    &[data-indeterminate] {
      & svg {
        stroke: none;
        fill: var(--checkmark-color);
      }
    }
  
    &[data-invalid] {
      .checkbox {
        --checkmark-color: var(--gray-50);
        border-color: var(--invalid-color);
      }
  
      &[data-pressed] .checkbox {
        border-color: var(--invalid-color-pressed);
      }
  
      &[data-selected],
      &[data-indeterminate] {
        .checkbox {
          background: var(--invalid-color);
        }
  
        &[data-pressed] .checkbox {
          background: var(--invalid-color-pressed);
        }
      }
    }
  
    &[data-disabled] {
      color: var(--text-color-disabled);
  
      .checkbox {
        border-color: var(--border-color-disabled);
      }
    }
  }
}
